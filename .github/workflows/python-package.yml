# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ develop, pre-release, master, main, feature-add-gui ]
    tags: v*
  pull_request:
    branches: [ develop, pre-release, master, main ]

jobs:
  build:

    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt-get install -y libopenslide-dev openslide-tools libopenjp2-7 libopenjp2-tools
        python -m pip install --upgrade pip
        python -m pip install ruff==0.0.286 pytest pytest-cov pytest-runner
        pip install -r requirements/requirements.txt
    - name: Cache tiatoolbox static assets
      uses: actions/cache@v3
      with:
        key: tiatoolbox-home-static
        path: ~/.tiatoolbox
    - name: Print Version Information
      run: |
        echo "---SQlite---"
        sqlite3 --version
        sqlite3 ":memory:" -list ".output stdout" "pragma compile_options" ".exit"
        echo "---Openslide---"
        openslide-quickhash1sum --version
        echo "---OpenJPEG---"
        opj_dump -h | head -n 5
        echo "---Python---"
        python -c "import sys; print('Python %s' % sys.version)"
        python -c "import sqlite3; print('SQLite %s' % sqlite3.sqlite_version)"
        python -c "import numpy; print('Numpy %s' % numpy.__version__)"
        python -c "import openslide; print('OpenSlide %s' % openslide.__version__)"
    - name: Lint with ruff
      run: |
        # stop the build if there are Python syntax errors or undefined names
        ruff check .
    - name: Test with pytest
      run: |
        pytest --basetemp={envtmpdir} \
           --cov=tiatoolbox --cov-report=term --cov-report=xml \
           --capture=sys \
           --durations=10 --durations-min=1.0 \
           --maxfail=1
    - name: Report test coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        files: coverage.xml
        fail_ci_if_error: false
        verbose: true

    - name: Report test coverage to DeepSource
      uses: deepsourcelabs/test-coverage-action@master
      with:
        key: python
        coverage-file: coverage.xml
        dsn: ${{ secrets.DEEPSOURCE_DSN }}
        fail-ci-on-error: false
